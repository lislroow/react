stages:
  - deploy

cache:
  paths:
    - ${CI_PROJECT_DIR}/envs

variables:
  CACHE_ENV_PATH: ${CI_PROJECT_DIR}/envs
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  REGISTRY_HOST: docker.io

deploy-docker:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
    APP_NAME: web-admin
  before_script:
    - echo "${DOCKER_REGISTRY_PASSWORD}" | docker login ${REGISTRY_HOST} -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - cat Dockerfile
    - docker build -t ${APP_NAME}:latest .
    - docker image tag ${APP_NAME}:latest ${DOCKER_REGISTRY_USER}/${APP_NAME}:latest
    - docker push ${REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/${APP_NAME}:latest
    - docker rmi -f $(docker images -f "dangling=true" -q) || true
    - if [ $(docker ps | grep "${CI_COMMIT_REF_NAME}.${APP_NAME}" | wc -l) == 1 ];then docker-compose -p ${CI_COMMIT_REF_NAME} down ${CI_COMMIT_REF_NAME}.${APP_NAME}; else echo "is not running"; fi
    - docker-compose -p ${CI_COMMIT_REF_NAME} up ${CI_COMMIT_REF_NAME}.${APP_NAME} -d
  after_script:
    - docker logout
  only:
    #- dev
    - prod
